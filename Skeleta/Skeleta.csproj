<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <Authors>Nemeth David</Authors>
    <Version>1.0.0</Version>
    <Company></Company>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <Product />
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="8.0.0" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="8.2.2" />
    <PackageReference Include="MailKit" Version="2.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="2.2.0" />
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="1.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="4.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="4.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="4.0.1" />
		<PackageReference Include="OpenIddict" Version="2.0.0" />
		<PackageReference Include="OpenIddict.EntityFrameworkCore" Version="2.0.0" />
  </ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\DAL\DAL.csproj" />
	</ItemGroup>
	
	<ItemGroup>
		<!--Include email templates in the publish output-->
		<Content Include="Helpers\Templates\*.template" CopyToPublishDirectory="PreserveNewest" />
	</ItemGroup>
	
	<ItemGroup>
	  <Compile Remove="ClientApp\src\app\components\task\**" />
	  <Content Remove="ClientApp\src\app\components\task\**" />
	  <EmbeddedResource Remove="ClientApp\src\app\components\task\**" />
	  <None Remove="ClientApp\src\app\components\task\**" />
	</ItemGroup>
	
	<ItemGroup>
	  <Compile Remove="Migrations\20190223194410_tasks_fluentApi.cs" />
	  <Compile Remove="Migrations\20190223194410_tasks_fluentApi.Designer.cs" />
	  <Compile Remove="Migrations\20190302120713_tasksRoles.cs" />
	  <Compile Remove="Migrations\20190302120713_tasksRoles.Designer.cs" />
	  <Compile Remove="Migrations\20190329232452_taskRelation.cs" />
	  <Compile Remove="Migrations\20190329232452_taskRelation.Designer.cs" />
	  <Compile Remove="Migrations\20190329233929_workItems.cs" />
	  <Compile Remove="Migrations\20190329233929_workItems.Designer.cs" />
	  <Compile Remove="Migrations\20190329235357_workitems.cs" />
	  <Compile Remove="Migrations\20190329235357_workitems.Designer.cs" />
	  <Compile Remove="Migrations\20190410220021_deletebehavior.cs" />
	  <Compile Remove="Migrations\20190410220021_deletebehavior.Designer.cs" />
	  <Compile Remove="Migrations\20190410220757_deletbehavior_tasitem_bugitem.cs" />
	  <Compile Remove="Migrations\20190410220757_deletbehavior_tasitem_bugitem.Designer.cs" />
	  <Compile Remove="Migrations\20190410221218_deletebehaviou.cs" />
	  <Compile Remove="Migrations\20190410221218_deletebehaviou.Designer.cs" />
	  <Compile Remove="Migrations\20190410221625_nulable_fks.cs" />
	  <Compile Remove="Migrations\20190410221625_nulable_fks.Designer.cs" />
	</ItemGroup>
	
	<ItemGroup>
	  <None Remove="ClientApp\src\app\models\enum.ts" />
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="ClientApp\src\app\components\controls\editors\" />
	  <Folder Include="wwwroot\clientapp\" />
	</ItemGroup>

	<ItemGroup>
	  <TypeScriptCompile Include="ClientApp\src\app\models\enum.ts" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
	

</Project>
